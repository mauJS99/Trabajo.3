#| label: tbl-sjmisc
#| #| tbl-cap: “Descriptivos indicadores Pobreza región Biobío”
dim(PROC_DATA)
sjmisc::descr(PROC_DATA,
show = c("label","range", "mean", "sd", "NA.prc", "n"))
PROC_DATA$Ingresos <- as.numeric(as.character(PROC_DATA$Ingresos))
PROC_DATA$Ingresos <- as.numeric(as.character(PROC_DATA$Ingresos))
PROC_DATA$Ingresos <- as.numeric(as.character(PROC_DATA$Ingresos))
PROC_DATA$Red_Apoyo <- as.numeric(as.character(PROC_DATA$Red_Apoyo))
PROC_DATA$Tipo_Vivienda <- as.numeric(as.character(PROC_DATA$Tipo_Vivienda))
PROC_DATA$Estado_Vivienda <- as.numeric(as.character(PROC_DATA$Estado_Vivienda))
PROC_DATA$Nivel_Educ <- as.numeric(as.character(PROC_DATA$Nivel_Educ))
PROC_DATA$Trabajo <- as.numeric(as.character(PROC_DATA$Trabajo))
PROC_DATA$Sist_Sal <- as.numeric(as.character(PROC_DATA$Sist_Sal))
# 3.4.Guardamos para optimizar:
save(PROC_DATA,file = "input/PROC_DATA.RData")
#Ajustes iniciales:
options(scipen=999)
#Paquetes:
library(pacman)
pacman::p_load(haven,
sjlabelled,
dplyr, #Manipulacion de datos
stargazer, #Tablas
sjmisc, # Tablas
summarytools, # Tablas
kableExtra, #Tablas
sjPlot, #Tablas y gráficos
corrplot, # Correlaciones
sessioninfo, # Información de la sesión de trabajo
ggplot2) # Para la mayoría de los gráficos
# 1.Base de datos:
load(file = "Input/PROC_DATA.RData")
# 3.Descripción de variables:
#| label: tbl-sjmisc
#| #| tbl-cap: “Descriptivos indicadores Pobreza región Biobío”
dim(PROC_DATA)
sjmisc::descr(PROC_DATA,
show = c("label","range", "mean", "sd", "NA.prc", "n"))
# 3.1 Gráficos univariados.
#| label: fig-gdp
#| fig-cap: “Nivel Educativo”
#Vivienda
frq(PROC_DATA$Nivel_Educ)
ggplot(PROC_DATA, aes(x = Educacion)) +
geom_bar() +
labs(x = "Nivel educativo", y = "Frecuencia") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# 3.1 Gráficos univariados.
#| label: fig-gdp
#| fig-cap: “Nivel Educativo”
#Vivienda
frq(PROC_DATA$Nivel_Educ)
ggplot(PROC_DATA, aes(x = Nivel_Educ)) +
geom_bar() +
labs(x = "Nivel educativo", y = "Frecuencia") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# 3.1 Gráficos univariados.
#| label: fig-gdp
#| fig-cap: “Nivel Educativo”
#Vivienda
frq(PROC_DATA$Nivel_Educ)
ggplot(PROC_DATA, aes(x = Nivel_Educ))+
geom_bar(fill = "coral") +
labs(title = "Nivel educativo")
# 0.Ajustes iniciales:
rm(list=ls())
# 2.Cargamos base de datos:
CASEN_2022<- read_dta("input/Casen_2022.dta") #para bases de datos de STATA
# 2.Cargamos base de datos:
CASEN_2022<- read_dta("input/Casen_2022.dta") #para bases de datos de STATA
# 1.Paquetes:
library(pacman)
install.packages("pacman")
pacman::p_load(haven,
sjlabelled,
dplyr, #Manipulacion de datos
stargazer, #Tablas
sjmisc, # Tablas
summarytools, # Tablas
kableExtra, #Tablas
sjPlot, #Tablas y gráficos
corrplot, # Correlaciones
sessioninfo, # Información de la sesión de trabajo
ggplot2) # Para la mayoría de los gráficos
# 2.Cargamos base de datos:
CASEN_2022<- read_dta("input/Casen_2022.dta") #para bases de datos de STATA
# 2.1.Filtramos para trabajar con la 8va región:
CASEN_8_RURAL <- CASEN_2022 %>%
filter(region==8, #Region del Biobio.
area==2) #Area rural
# 2.2.Seleccionamos variables:
DATA <- CASEN_8_RURAL %>%
select(e6a, #Educacion
o1: o4, o6, #Trabajo
y1, #Ingresos
s13, #Salud
r7a: r7k, #Red de apoyo
v1, v3, v5, v7) #Vivienda y estado de vivienda
summary(DATA)
# 2.3.Guardamos para optimizar
save(DATA,file = "input/DATA.RData")
# 3.Exploramos la nueva Base y sus variables:
dim(DATA)
view_df(DATA)
sjlabelled::get_label(DATA)
frq(DATA$e6a)
frq(DATA$o1)
frq(DATA$o2)
frq(DATA$o3)
frq(DATA$o4)
frq(DATA$o6)
frq(DATA$y1)
frq(DATA$s13)
frq(DATA$r7a)
frq(DATA$r7b)
frq(DATA$r7c)
frq(DATA$r7d)
frq(DATA$r7e)
frq(DATA$r7f)
frq(DATA$r7g)
frq(DATA$r7h)
frq(DATA$r7i)
frq(DATA$r7j)
frq(DATA$r7k)
frq(DATA$v1)
frq(DATA$v3)
frq(DATA$v5)
frq(DATA$v7)
# 3.1.Casos perdidos:
DATA <- DATA %>% set_na(., na = (-88))
# 3.1.Casos perdidos:
DATA <- DATA %>% set_na(., na = (-88))
DATA$o1 <- ifelse(DATA$o1 == 1, 1, 0)
DATA$o2 <- ifelse(DATA$o2 == 1, 1, 0)
DATA$o3 <- ifelse(DATA$o3 == 1, 1, 0)
DATA$o4 <- ifelse(DATA$o4 == 1, 1, 0)
DATA$o6 <- ifelse(DATA$o6 == 1, 1, 0)
DATA$v3 <- as_factor(DATA$v3)
DATA$v3 <- recode(DATA$v3, "1" = "3", "2" = "2", "3" = "1")
DATA$v5 <- as_factor(DATA$v5)
DATA$v5 <- recode(DATA$v5, "1" = "3", "2" = "2", "3" = "1")
DATA$v7 <- as_factor(DATA$v7)
DATA$v7 <- recode(DATA$v7, "1" = "3", "2" = "2", "3" = "1")
DATA$v3 <- as.numeric(as.character(DATA$v3))
DATA$v5 <- as.numeric(as.character(DATA$v5))
DATA$v7 <- as.numeric(as.character(DATA$v7))
# 3.2.Agrupamos variables:
#"y1" corresponde a los ingresos
DATA$Red_Apoyo <- (DATA$r7a + DATA$r7b +DATA$r7c + DATA$r7d +DATA$r7e + DATA$r7f +DATA$r7g + DATA$r7h +DATA$r7i + DATA$r7j +DATA$r7k)
#"v1" corresponde al tipo de vivienda
DATA$Estado_Vivienda <- (DATA$v3 + DATA$v5 + DATA$v7)
#"e6a" corresponde al nivel educacional
DATA$Trabajo <- (DATA$o1 + DATA$o2 + DATA$o3 + DATA$o4 + DATA$o6)
view_df(DATA)
# 3.3.Seleccionamos variables para el trabajo:
PROC_DATA <- DATA %>%
select(y1, Red_Apoyo, v1, Estado_Vivienda, e6a, Trabajo, s13)
PROC_DATA$Red_Apoyo <- as.numeric(as.character(PROC_DATA$Red_Apoyo))
PROC_DATA$Estado_Vivienda <- as.numeric(as.character(PROC_DATA$Estado_Vivienda))
PROC_DATA$Trabajo <- as.numeric(as.character(PROC_DATA$Trabajo))
# 3.4.Guardamos para optimizar:
save(PROC_DATA,file = "input/PROC_DATA.RData")
# 4.Tabla descriptiva.
summarytools::dfSummary(PROC_DATA, plain.ascii = FALSE)
view(dfSummary(PROC_DATA, headings=FALSE))
## 4.1.Gráficos de las Variables:
graf_Ingresos <- ggplot(PROC_DATA, aes(x = y1)) +
geom_bar(fill = "coral") +
labs (title = "Ingresos totales")
graf_Apoyo <- ggplot(PROC_DATA, aes(x = Red_Apoyo))+
geom_bar(fill = "coral") +
labs (title = "Red de apoyo")
graf_Viv <- ggplot(PROC_DATA, aes(x = v1))+
geom_bar(fill = "coral") +
labs(title = "Tipo de Vivienda")
graf_Educ <- ggplot(PROC_DATA, aes(x = e6a))+
geom_bar(fill = "coral") +
labs(title = "Nivel educativo")
graf_Salud <- ggplot(PROC_DATA, aes(x = s13))+
geom_bar(fill = "coral") +
labs(title = "Sistema de salud")
graf_Trabajo <- ggplot(PROC_DATA, aes(x = Trabajo))+
geom_bar(fill = "coral") +
labs(title = "Oficio u ocupación")
# 4.2.Guardamos:
ggsave(graf_Ing, file="output/graf_Ing.png")
ggsave(graf_Salud, file="output/graf_Salud.png")
ggsave(graf_Trabajo, file="output/graf_Trabajo.png")
# 4.2.Guardamos:
ggsave(graf_Ing, file="output/graf_Ing.png")
## 4.1.Gráficos de las Variables:
graf_Ingresos <- ggplot(PROC_DATA, aes(x = y1)) +
geom_bar(fill = "coral") +
labs (title = "Ingresos totales")
graf_Apoyo <- ggplot(PROC_DATA, aes(x = Red_Apoyo))+
geom_bar(fill = "coral") +
labs (title = "Red de apoyo")
graf_Viv <- ggplot(PROC_DATA, aes(x = v1))+
geom_bar(fill = "coral") +
labs(title = "Tipo de Vivienda")
graf_Educ <- ggplot(PROC_DATA, aes(x = e6a))+
geom_bar(fill = "coral") +
labs(title = "Nivel educativo")
graf_Salud <- ggplot(PROC_DATA, aes(x = s13))+
geom_bar(fill = "coral") +
labs(title = "Sistema de salud")
graf_Trabajo <- ggplot(PROC_DATA, aes(x = Trabajo))+
geom_bar(fill = "coral") +
labs(title = "Oficio u ocupación")
# 4.2.Guardamos:
ggsave(graf_Ing, file="output/graf_Ing.png")
ggsave(graf_Apoyo, file="output/graf_Apoyo.png")
## 4.1.Gráficos de las Variables:
graf_Ingresos <- ggplot(PROC_DATA, aes(x = y1)) +
geom_bar(fill = "coral") +
labs (title = "Ingresos totales")
# 4.2.Guardamos:
ggsave(graf_Ingresos, file="output/graf_Ing.png")
ggsave(graf_Apoyo, file="output/graf_Apoyo.png")
ggsave(graf_Viv, file="output/graf_Viv.png")
ggsave(graf_Educ, file="output/graf_Educ.png")
ggsave(graf_Salud, file="output/graf_Salud.png")
ggsave(graf_Trabajo, file="output/graf_Trabajo.png")
#Ajustes iniciales:
options(scipen=999)
#Paquetes:
library(pacman)
pacman::p_load(haven,
sjlabelled,
dplyr, #Manipulacion de datos
stargazer, #Tablas
sjmisc, # Tablas
summarytools, # Tablas
kableExtra, #Tablas
sjPlot, #Tablas y gráficos
corrplot, # Correlaciones
sessioninfo, # Información de la sesión de trabajo
ggplot2) # Para la mayoría de los gráficos
# 1.Base de datos:
load(file = "Input/DATA.RData")
###CORREGIR TRATAMIENTO DE LOS CASOS PERDIDOS.......
sum(is.na(datos_proc))
datos_proc <-na.omit(datos_proc)
# 3.Descripción de variables:
#| label: tbl-sjmisc
#| #| tbl-cap: “Descriptivos indicadores Pobreza región Biobío”
dim(datos_proc)
sjmisc::descr(datos_proc,
show = c("label","range", "mean", "sd", "NA.prc", "n"))%>%
kable(.,"markdown")
# 3.1 Gráficos univariados.
#| label: fig-gdp
#| fig-cap: “Educacion”
#Vivienda
frq(datos_proc$e6a)
ggplot(datos_proc, aes(x = Educacion)) +
geom_bar() +
labs(x = "Nivel educativo", y = "Frecuencia") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# 3.1 Gráficos univariados.
#| label: fig-gdp
#| #| fig-cap: “Vivienda”
#| #Vivienda
frq(datos_proc$v1)
ggplot(datos_proc, aes(x = v1)) +   geom_bar() +   labs(x = "Tipo de Vivienda", y = "Frecuencia") +   theme_minimal()+   theme(axis.text.x = element_text(angle = 45, hjust = 1))
#Ajustes iniciales:
options(scipen=999)
#Paquetes:
library(pacman)
pacman::p_load(haven,
sjlabelled,
dplyr, #Manipulacion de datos
stargazer, #Tablas
sjmisc, # Tablas
summarytools, # Tablas
kableExtra, #Tablas
sjPlot, #Tablas y gráficos
corrplot, # Correlaciones
sessioninfo, # Información de la sesión de trabajo
ggplot2) # Para la mayoría de los gráficos
# 1.Base de datos:
load(file = "Input/PROC_DATA.RData")
# 3.Descripción de variables:
#| label: tbl-sjmisc
#| #| tbl-cap: “Descriptivos indicadores Pobreza región Biobío”
dim(PROC_DATA)
sjmisc::descr(PROC_DATA,
show = c("label","range", "mean", "sd", "NA.prc", "n"))
#Ajustes iniciales:
options(scipen=999)
#Paquetes:
library(pacman)
pacman::p_load(haven,
sjlabelled,
dplyr, #Manipulacion de datos
stargazer, #Tablas
sjmisc, # Tablas
summarytools, # Tablas
kableExtra, #Tablas
sjPlot, #Tablas y gráficos
corrplot, # Correlaciones
sessioninfo, # Información de la sesión de trabajo
ggplot2) # Para la mayoría de los gráficos
# 1.Base de datos:
load(file = "Input/PROC_DATA.RData")
# 3.Descripción de variables:
#| label: tbl-sjmisc
#| #| tbl-cap: “Descriptivos indicadores Pobreza región Biobío”
dim(PROC_DATA)
sjmisc::descr(PROC_DATA,
show = c("label","range", "mean", "sd", "NA.prc", "n"))
# 3.Descripción de variables:
#| label: tbl-sjmisc
#| #| tbl-cap: “Descriptivos indicadores Pobreza región Biobío”
dim(PROC_DATA)
sjmisc::descr(PROC_DATA,
show = c("label","range", "mean", "sd", "NA.prc", "n"))%>%
kable(.,"markdown")
# 3.1 Gráficos univariados.
#| label: fig-gdp
#| fig-cap: “Nivel Educativo”
#Vivienda
frq(PROC_DATA$e6a)
ggplot(PROC_DATA, aes(x = e6a))+
geom_bar(fill = "coral") +
labs(title = "Nivel educativo")
####### BASE RData optimizada, resultado de la filtración, recodificación y selección.
load(file = "Input/PROC_DATA.RData")
# 4.Tabla descriptiva.
summarytools::dfSummary(PROC_DATA, plain.ascii = FALSE)
view(dfSummary(PROC_DATA, headings=FALSE))
# 0.Ajustes iniciales:
rm(list=ls())
pacman::p_load(haven,
sjlabelled,
dplyr, #Manipulacion de datos
stargazer, #Tablas
sjmisc, # Tablas
summarytools, # Tablas
kableExtra, #Tablas
sjPlot, #Tablas y gráficos
corrplot, # Correlaciones
sessioninfo, # Información de la sesión de trabajo
ggplot2,  # Para la mayoría de los gráficos
mice)   #Para imputar NA's
####### BASE RData optimizada, resultado de la filtración, recodificación y selección.
load(file = "Input/PROC_DATA.RData")
### Pasamos a numericas
PROC_DATA$Ingresos <- as.numeric(as.character(PROC_DATA$Ingresos))
PROC_DATA$Tipo_vivienda <- as.numeric(as.character(PROC_DATA$Tipo_vivienda))
PROC_DATA$Nivel_educacional <- as.numeric(as.character(PROC_DATA$Nivel_educacional))
PROC_DATA$Sistema_salud <- as.numeric(as.character(PROC_DATA$Sistema_Salud))
PROC_DATA$Ocupacion_u_oficio <- as.numeric(as.character(PROC_DATA$Trabajo))
# 4.Tabla descriptiva.
summarytools::dfSummary(PROC_DATA, plain.ascii = FALSE)
view(dfSummary(PROC_DATA, headings=FALSE))
## 4.1.Gráficos de las Variables:
graf_Ingresos <- ggplot(PROC_DATA, aes(x = Ingresos)) +
geom_bar(fill = "coral") +
labs (title = "Ingresos totales")
graf_Apoyo <- ggplot(PROC_DATA, aes(x = Red_apoyo))+
geom_bar(fill = "coral") +
labs (title = "Red de apoyo")
graf_Viv <- ggplot(PROC_DATA, aes(x = Tipo_vivienda))+
geom_bar(fill = "coral") +
labs(title = "Tipo de Vivienda")
graf_Viv_estado <- ggplot(PROC_DATA, aes(x = Estado_Vivienda))+
geom_bar(fill = "coral") +
labs(title = "Estado de Vivienda")
graf_Educ <- ggplot(PROC_DATA, aes(x = Nivel_educacional))+
geom_bar(fill = "coral") +
labs(title = "Nivel educativo")
graf_Salud <- ggplot(PROC_DATA, aes(x = Sistema_salud))+
geom_bar(fill = "coral") +
labs(title = "Sistema de salud")
graf_Trabajo <- ggplot(PROC_DATA, aes(x = Ocupacion_u_oficio))+
geom_bar(fill = "coral") +
labs(title = "Oficio u ocupación")
# 5.0 Asociacion de variables:
dim(PROC_DATA)
sjmisc::descr(PROC_DATA,
show = c("label","range", "mean", "sd", "NA.prc", "n")) %>%
kable(.,"markdown")
# 5.1.Correlación
PROC_DATA <- mutate_all(PROC_DATA, as.numeric)
COR_PROC_DATA <- cor(PROC_DATA,
use = "complete.obs")
COR_PROC_DATA
sjPlot::tab_corr(PROC_DATA,
triangle = "lower")
corrplot.mixed(COR_PROC_DATA)
###Alpha de Cronbach:
psych::alpha(PROC_DATA, check.keys = TRUE)
psych::alpha(dplyr::select(PROC_DATA, Ingresos, Estado_Vivienda, Nivel_educacional, Ocupacion_u_oficio),check.keys = TRUE)
# 5.3.Construccion de escala:
PROC_DATA <- PROC_DATA %>%
rowwise() %>%
mutate(Pobreza_multidi_rural = sum(Ingresos, Estado_Vivienda, Nivel_educacional, Ocupacion_u_oficio))
summary(PROC_DATA$Pobreza_multidi_rural)
ggplot(PROC_DATA, aes(x = Pobreza_multidi_rural)) +
geom_histogram(binwidth = 5, colour = "black", fill = "yellow") +
theme_bw() +
xlab("Pobreza multidimensional rural") +
ylab("Frecuencia")
ggplot(PROC_DATA, aes(x = Pobreza_multidi_rural)) +
geom_histogram(binwidth = 0.6, colour = "black", fill = "yellow") +
theme_bw() +
xlab("Pobreza multidimensional rural") +
ylab("Frecuencia")
ggplot(PROC_DATA, aes(x = Pobreza_multidi_rural)) +
geom_histogram(binwidth = 0.6, colour = "black", fill = "yellow") +
theme_bw() +
xlab("Pobreza multidimensional rural") +
ylab("Frecuencia")
ggplot(PROC_DATA, aes(x = Pobreza_multidi_rural)) +
geom_histogram(binwidth = 0.9, colour = "black", fill = "yellow") +
theme_bw() +
xlab("Pobreza multidimensional rural") +
ylab("Frecuencia")
ggplot(PROC_DATA, aes(x = Pobreza_multidi_rural)) +
geom_histogram(binwidth = 2, colour = "black", fill = "yellow") +
theme_bw() +
xlab("Pobreza multidimensional rural") +
ylab("Frecuencia")
ggplot(PROC_DATA, aes(x = Pobreza_multidi_rural)) +
geom_histogram(binwidth = 5, colour = "black", fill = "yellow") +
theme_bw() +
xlab("Pobreza multidimensional rural") +
ylab("Frecuencia")
ggplot(PROC_DATA, aes(x = Pobreza_multidi_rural)) +
geom_histogram(binwidth = 4, colour = "black", fill = "yellow") +
theme_bw() +
xlab("Pobreza multidimensional rural") +
ylab("Frecuencia")
ggplot(PROC_DATA, aes(x = Pobreza_multidi_rural)) +
geom_histogram(binwidth = 3, colour = "black", fill = "yellow") +
theme_bw() +
xlab("Pobreza multidimensional rural") +
ylab("Frecuencia")
ggplot(PROC_DATA, aes(x = Pobreza_multidi_rural)) +
geom_histogram(binwidth = 1, colour = "black", fill = "yellow") +
theme_bw() +
xlab("Pobreza multidimensional rural") +
ylab("Frecuencia")
ggplot(PROC_DATA, aes(x = Pobreza_multidi_rural)) +
geom_histogram(binwidth = 10, colour = "black", fill = "yellow") +
theme_bw() +
xlab("Pobreza multidimensional rural") +
ylab("Frecuencia")
ggplot(PROC_DATA, aes(x = Pobreza_multidi_rural)) +
geom_histogram(binwidth = 100, colour = "black", fill = "yellow") +
theme_bw() +
xlab("Pobreza multidimensional rural") +
ylab("Frecuencia")
ggplot(PROC_DATA, aes(x = Pobreza_multidi_rural)) +
geom_histogram(binwidth = 200, colour = "black", fill = "yellow") +
theme_bw() +
xlab("Pobreza multidimensional rural") +
ylab("Frecuencia")
ggplot(PROC_DATA, aes(x = Pobreza_multidi_rural)) +
geom_histogram(binwidth = 2500, colour = "black", fill = "yellow") +
theme_bw() +
xlab("Pobreza multidimensional rural") +
ylab("Frecuencia")
ggplot(PROC_DATA, aes(x = Pobreza_multidi_rural)) +
geom_histogram(binwidth = 90000, colour = "black", fill = "yellow") +
theme_bw() +
xlab("Pobreza multidimensional rural") +
ylab("Frecuencia")
ggplot(PROC_DATA, aes(x = Pobreza_multidi_rural)) +
geom_histogram(binwidth = 100000, colour = "black", fill = "yellow") +
theme_bw() +
xlab("Pobreza multidimensional rural") +
ylab("Frecuencia")
ggplot(PROC_DATA, aes(x = Pobreza_multidi_rural))+
geom_bar(fill = "coral") +
labs(title = "Pobreza multidimensional rural")
ggplot(PROC_DATA, aes(x = Pobreza_multidi_rural)) +
geom_histogram(binwidth = 100000, colour = "black", fill = "yellow") +
theme_bw() +
xlab("Pobreza multidimensional rural") +
ylab("Frecuencia")
options(scipen=999)
ggplot(PROC_DATA, aes(x = Pobreza_multidi_rural)) +
geom_histogram(binwidth = 100000, colour = "black", fill = "yellow") +
theme_bw() +
xlab("Pobreza multidimensional rural") +
ylab("Frecuencia")
ggplot(PROC_DATA, aes(x = Pobreza_multidi_rural)) +
geom_histogram(binwidth = 150000, colour = "black", fill = "yellow") +
theme_bw() +
xlab("Pobreza multidimensional rural") +
ylab("Frecuencia")
ggplot(PROC_DATA, aes(x = Pobreza_multidi_rural)) +
geom_histogram(binwidth = 200000, colour = "black", fill = "yellow") +
theme_bw() +
xlab("Pobreza multidimensional rural") +
ylab("Frecuencia")
ggplot(PROC_DATA, aes(x = Pobreza_multidi_rural)) +
geom_histogram(binwidth = 2000000, colour = "black", fill = "yellow") +
theme_bw() +
xlab("Pobreza multidimensional rural") +
ylab("Frecuencia")
ggplot(PROC_DATA, aes(x = Pobreza_multidi_rural)) +
geom_histogram(binwidth = 150000, colour = "black", fill = "yellow") +
theme_bw() +
xlab("Pobreza multidimensional rural") +
ylab("Frecuencia")
